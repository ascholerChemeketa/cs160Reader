<section xml:id="sql-intro_filtering-with-like">
        <title>Filtering with Like</title>
        <p>If the data that we are trying to filter is strings of text, we may need to search
            inside the strings. Perhaps we are looking for all names that start with &#8220;Janice&#8221;,
            or all class descriptions that include the word &#8220;Chemistry&#8221; anywhere in the title.
            To match part of a string using <c>WHERE</c>, we can&#8217;t rely on <c>==</c>. If we ask for
            <c>WHERE name == 'Janice'</c>, we will only get names that perfectly match &#8216;Janice&#8217; -
            which would not include &#8216;Janice Jones&#8217;.</p>
        
        
        <p xml:id="sql-intro_index-0">The <c>LIKE</c> comparison allows us to specify strings using <term>wildcards</term>. <term>Wildcards</term>
            are symbols that can match anything. In SQL <c>LIKE</c> comparisons, <c>%</c> is a wildcard
            that means &#8220;any text can go here&#8221;. So <c>'Janice%''</c> says &#8220;Look for strings that start with
            Janice, and then have anything after that (including nothing else)&#8221;. While <c>'%Janice'</c>
            says &#8220;look for strings that end in Janice and may have anything before that&#8221;. If we
            want to allow for extra text to be on either side of &#8216;Janice&#8217;, we would use <c>%</c> on
            both sides - <c>'%Janice%'</c></p>
        <p>This sample pulls from the <c>bikeshare_stations</c> table to search for all station names
            that include &#8216;F St&#8217;:</p>

    <program xml:id="sqlintro_like1" interactive="activecode" language="sql">
        <input>
SELECT
    *
FROM
    bikeshare_stations
WHERE
    name LIKE '%F St%'
        </input>
    </program>
        <p>We do have to be careful not to specify things that are too broad. Try changing the like
            to look for anything that includes &#8216;7th&#8217; and examine the results.</p>
        <p>The pattern <c>'%7th%'</c> matches way too many things. To get just 7th (and not 17th or 27th)
            we would need to state something like <em>&#8220;where the name starts with 7th or the name has &#8216; 7th&#8217;
                within it&#8221;</em>. The space inside the string will make sure we don&#8217;t match &#8216;17th&#8217;. This query
            will perform that search. Notice that to check if the name begins with &#8216;7th&#8217;, we make sure
            not to put a <c>%</c> at the start of the string.</p>

    <program xml:id="sqlintro_like2" interactive="activecode" language="sql">
        <input>
SELECT
    *
FROM
    bikeshare_stations
WHERE
    name LIKE '7th%'  --7th at beginning of name
    OR
    name LIKE '% 7th%'  --space in front of 7th
        </input>
    </program>

        <exercise label="sqlintro_like3">
            <statement>
    <p>Change the program above to find the number of records that end with NW. Write the number of records
found in the box below. <var/>  </p></statement><setup><var><condition string="^\s*^62$\s*$"><feedback><p>Correct!</p></feedback></condition><condition number="[71, 71]"><feedback><p>That is the number that have &#8216;NW&#8217; anywhere inside the string. Make sure to only get those that end with &#8216;NW&#8217;</p></feedback></condition><condition string="^\s*.*\s*$"><feedback><p>No, make sure you are matching records that have &#8216;NW&#8217; inside the name. For your answer just give the number of records found.</p></feedback></condition></var></setup></exercise>    </section>

