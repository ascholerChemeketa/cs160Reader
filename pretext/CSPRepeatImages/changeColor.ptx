<section xml:id="csp-repeat-images_increasing-and-decreasing-brightness">
  <title>Increasing and decreasing brightness</title>
  <p>We can change one color channel (red/green/blue) at a time, or we can change all three. If we increase the value of
    all colors, we make the image get brighter. If we decrease all the colors, we make the image darker.</p>
  <p>This program uses step five to increase each color value by 50% (1.5 times its original value.)</p>

  <program xml:id="csprepeatimages_changecolor1" interactive="activecode" language="python">
    <input>
# STEP 1: USE THE IMAGE LIBRARY
from image import *

# STEP 2: PICK THE IMAGE
img = Image("student1.jpg")
win = ImageWin(img.getWidth(), img.getHeight())
img.draw(win)

# STEP 3: LOOP THROUGH THE PIXELS
pixels = img.getPixels();
for p in pixels:

    # STEP 4: GET THE DATA
    r = p.getRed()
    g = p.getGreen()
    b = p.getBlue()

    # STEP 5: MODIFY THE COLOR
    p.setRed(r * 1.5)
    p.setGreen(g * 1.5)
    p.setBlue(b * 1.5)

    # STEP 6: UPDATE THE IMAGE
    img.updatePixel(p)

# STEP 7: SHOW THE RESULT
win2 = ImageWin(img.getWidth(), img.getHeight())
img.draw(win2)
  </input>
  </program>
  <p>Try decreasing each color channel by 50% (0.5 times its original value) - you should end up with a darker version
    of the same picture.</p>
  <exercise label="csprepeatimages_changecolor2" numbered="yes" adaptive="yes" indentation="show" language="python">
    <statement>
      <p>If we ant to make the image both brighter and more red, we could increase just the red value. However, if we
        want it to look more red, but get brighter overall, we would want to make a small increase to the red value and
        a decrease to the blue and green values.</p>
      <p>Arrange and indent the blocks below to make a recipe that would make the image more red but not increase the
        overall brightness much. You should modify the red value before you modify the green &amp; blue (that would not
        matter in a real program, but here you need to have them in that order.)</p>
    </statement>
    <blocks>
      <block order="8">
        <cline>from image import *</cline>
      </block>
      <block order="6">
        <cline>img = Image("cat.jpg")</cline>
      </block>
      <block order="9">
        <cline>pixels = img.getPixels()</cline>
        <cline>for p in pixels:</cline>
      </block>
      <block order="1">
        <cline> r = p.getRed()</cline>
        <cline> g = p.getGreen()</cline>
        <cline> b = p.getBlue()</cline>
      </block>
      <block order="4">
        <choice correct="yes">
          <cline> p.setRed(g * 1.2)</cline>
        </choice>
        <choice>
          <cline> p.setRed(g * 0.9) </cline>
        </choice>
      </block>
      <block order="7">
        <choice correct="yes">
          <cline> p.setGreen(g * 0.9)</cline>
          <cline> p.setBlue(b * 0.9)</cline>
        </choice>
        <choice>
          <cline> p.setGreen(g * 1.2)</cline>
          <cline> p.setBlue(b * 1.2) </cline>
        </choice>
      </block>
      <block order="10">
        <cline> img.updatePixel(p)</cline>
      </block>
      <block order="2">
        <cline>win = ImageWin(img.getWidth(), img.getHeight())</cline>
        <cline>img.draw(win)</cline>
      </block>
    </blocks>
  </exercise>
</section>

