<section xml:id="csp-name-turtles_single-and-multiple-turtles">
  <title>Single and Multiple Turtles</title>
  <p>The program below draws a shape we have seen before.</p>

  <exercise label="cspnameturtles_multturtles1">
    <statement>
      <p>What shape will the program below draw when you click on the Run button? <var />
      </p>
    </statement>
    <setup>
      <var>
        <condition string="^\s*^triangle$|^Triangle$|^TRIANGLE$\s*$">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.*\s*$">
          <feedback>
            <p>Try to follow the directions as if you are the turtle</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>
  <program xml:id="cspnameturtles_multturtles2" interactive="activecode" language="python">
    <input>
from turtle import *
zari = Turtle()
zari.setheading(90)
zari.forward(100)
zari.right(120)
zari.forward(100)
zari.right(120)
zari.forward(100)
zari.right(120)
        </input>
  </program>
  <p>This works because the turtle <c>zari</c> is keeping track of its state as we call different procedures. When we say <c>forward</c>,
    the actual direction <c>zari</c> moves depends on what turns it has done so far.</p>
  <p>If we introduce another turtle and use it to run some of the procedures, we will not get the same shape.</p>

  <program xml:id="cspnameturtles_multturtles3" interactive="activecode" language="python">
    <input>
from turtle import *
zari = Turtle()
chad = Turtle()                 # Make a second turtle named chad
chad.color("orange")            # Change chad's color to make it clear what it draws

zari.setheading(90)             # Have zari start drawing the shape
zari.forward(100)
zari.right(120)
zari.forward(100)
zari.right(120)

chad.forward(100)               # Use chad for the last two procedures
chad.right(120)
        </input>
  </program>
  <p>Every turtle object has its own state - it keeps track of its own position and color. So, when we created chad his
    position wasn’t the same as zari’s - all turtles start at the center of the screen (0, 0). Similarly,
    his direction starts out at the default (East).</p>
  <p>
    <term>Mixed up programs</term>
  </p>
  <exercise label="cspnameturtles_multturtles4" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program has one turtle, <q>jamal</q>, draw a capital L in blue and then another,
        <q>tina</q>, draw a line to the west in orange as shown below. The program should do all set-up, have
        <q>jamal</q> draw the L, and then have <q>tina</q> draw the line. Drag the blocks of statements
        from the left column to the right column and put them in the right order. Then click on <em> Check</em> to see
        if you are right.</p>
      <image source="CSPNameTurtles/Figures/TwoTurtles1N.png" width="30%" />
    </statement>
    <blocks>
      <block order="2">
        <cline>from turtle import *</cline>
      </block>
      <block order="1">
        <cline>jamal = Turtle()</cline>
        <cline>jamal.pensize(10)</cline>
        <cline>jamal.color("blue")</cline>
      </block>
      <block order="3">
        <choice correct="yes">
          <cline>jamal.right(90)</cline>
          <cline>jamal.forward(150)</cline>
        </choice>
        <choice>
          <cline>jamal.left(90)</cline>
          <cline>jamal.forward(150) </cline>
        </choice>
      </block>
      <block order="4">
        <choice correct="yes">
          <cline>jamal.left(90)</cline>
          <cline>jamal.forward(75)</cline>
        </choice>
        <choice>
          <cline>jamal.right(90)</cline>
          <cline>jamal.forward(75) </cline>
        </choice>
      </block>
      <block order="8">
        <choice correct="yes">
          <cline>tina = Turtle()</cline>
          <cline>tina.pensize(10)</cline>
          <cline>tina.color("orange")</cline>
        </choice>
        <choice>
          <cline>tina = Turtle()</cline>
          <cline>tina.pensize(10)</cline>
          <cline>tina.color(orange) </cline>
        </choice>
      </block>
      <block order="7">
        <cline>tina.left(180)</cline>
        <cline>tina.forward(75)</cline>
      </block>
    </blocks>
  </exercise>
  <exercise label="cspnameturtles_multturtles5" numbered="yes" adaptive="yes" indentation="hide" language="python">
    <statement>
      <p>The following program has one turtle, <q>jamal</q>, draw a line to the north in blue and then another,
        <q>tina</q>, draw a line to the east in orange as shown below. The program should import the turtle
        module, get the window to draw on, create the turtle <q>jamal</q>, have it draw a line to the north, then
        create the turtle <q>tina</q>, and have it draw a line to the east. Drag the blocks of statements from
        the left column to the right column and put them in the right order. Then click on <em>Check</em> to see if you
        are right.</p>
      <image source="CSPNameTurtles/Figures/TwoTurtlesLN.png" width="30%" />
    </statement>
    <blocks>
      <block order="2">
        <choice correct="yes">
          <cline>from turtle import *</cline>
        </choice>
        <choice>
          <cline>from turtle </cline>
        </choice>
      </block>
      <block order="8">
        <choice correct="yes">
          <cline>jamal = Turtle()</cline>
        </choice>
        <choice>
          <cline>jamal = turtle() </cline>
        </choice>
      </block>
      <block order="1">
        <cline>jamal.color("blue")</cline>
        <cline>jamal.pensize(10)</cline>
        <cline>jamal.left(90)</cline>
        <cline>jamal.forward(150)</cline>
      </block>
      <block order="6">
        <cline>tina = Turtle()</cline>
        <cline>tina.pensize(10)</cline>
      </block>
      <block order="5">
        <choice correct="yes">
          <cline>tina.color("orange")</cline>
          <cline>tina.forward(150)</cline>
        </choice>
        <choice>
          <cline>tina.color("orange")</cline>
          <cline>tina.Forward(150) </cline>
        </choice>
      </block>
    </blocks>
  </exercise>
</section>