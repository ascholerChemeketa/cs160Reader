<section xml:id="binary_bit-patterns">
  <title>Bit Patterns</title>
  <p>A bit can only represent two possible values - 0 or 1. With one bit there are two possible patterns. How many
    patterns can be formed with two bits? Here is a complete list:</p>
  <blockquote>
    <line_block>
      <line>0 0</line>
      <line>0 1</line>
      <line>1 0</line>
      <line>1 1</line>
    </line_block>
  </blockquote>
  <figure xml:id="bit-patterns-demo-app">
    <caption>Try clicking these switches. With two on/off switches, you should be able to make 4 different combinations - off/off, off/on, on/off, on/on.</caption>
  </figure>
  <raw format="html" xml:space="preserve">
  <div class="figure" style="max-width: 300px;">
    <img style="" src="external/Binary/Images/toggleOff.gif" class="toggleImg"/>
    <img style=""  src="external/Binary/Images/toggleOff.gif" class="toggleImg"/>
    <script>
        function toggle() {
        if($(this).attr('src').indexOf("toggleOn") != -1)
              $(this).attr('src','external/Binary/Images/toggleOff.gif');
        else
              $(this).attr('src','external/Binary/Images/toggleOn.gif');
        }
        window.addEventListener("load", () => $("img.toggleImg").mousedown(toggle));
    </script>
  </div>
  </raw>
  <p>How many patterns can be formed with three bits? Letâ€™s list them:</p>
  <blockquote>
    <line_block>
      <line>0 0 0</line>
      <line>0 0 1</line>
      <line>0 1 0</line>
      <line>0 1 1</line>
      <line>1 0 0</line>
      <line>1 0 1</line>
      <line>1 1 0</line>
      <line>1 1 1</line>
    </line_block>
  </blockquote>
  <p>The list of patterns for three bits has 8 lines (patterns). Notice that the first four patterns are a
    <q>0</q> followed by the possible patterns for 2 bits. The second four patterns are a <q>1</q>
    followed by the patterns for 2 bits.</p>
  <p>To form the list of patterns for 4 bits, we can use the same trick. Make two copies of the list for 3 bits. This
    gives you 16 lines. Put a <q>0</q> at the start of the first 8 lines and a <q>1</q> at the start of
    the second 8 lines.</p>
  <p>This trick can be repeated as many times as you like. Adding one more bit doubles the number of patterns. The table
    shows the number of patterns for 1, 2, 3 and 4 bits.</p>
  <p>Number of Bits Number of Patterns Number of Patterns as a power of two:</p>
  <table>
    <tabular>
      <row header="yes">
        <cell> Bits </cell>
        <cell> Patterns </cell>
        <cell> Power of two </cell>
      </row>
      <row>
        <cell> 1 </cell>
        <cell> 2 </cell>
        <cell>
          <m>2^1</m>
        </cell>
      </row>
      <row>
        <cell> 2 </cell>
        <cell> 4 </cell>
        <cell>
          <m>2^2</m>
        </cell>
      </row>
      <row>
        <cell> 3 </cell>
        <cell> 8 </cell>
        <cell>
          <m>2^3</m>
        </cell>
      </row>
      <row>
        <cell> 4 </cell>
        <cell> 16 </cell>
        <cell>
          <m>2^4</m>
        </cell>
      </row>
    </tabular>
  </table>
  <p>How many patterns with 5 bits? Make two copies of the 4-bit patterns (16 patterns per copy). Make the patterns
    unique by prefixing <q>0</q> to the first 16 patterns and <q>1</q> to the second 16. You now have <m>16 \times 2
    = 32 = 2^5</m> unique patterns.</p>
  <p>This demonstrates the following:</p>
  <p>
    <term>Number of possible patterns of N bits = <m>2^N</m></term>
  </p>
  <p>Memorize this fact. Better yet, make lists of patterns (as above) and play around until you understand. Do this
    now. This is an essential fact. If you allow yourself to get muddled on it, you will waste much time in this and
    future courses.</p>


  <exercise label="binary_bitpatterns1">
    <statement>
      <p>How many different values can be formed from a pattern of 10 bits? <var />
      </p>
    </statement>
    <setup>
      <var>
        <condition number="[1024, 1024]">
          <feedback>
            <p>Correct!</p>
          </feedback>
        </condition>
        <condition string="^\s*.{1,3}\s*$">
          <feedback>
            <p>That is not enough digits</p>
          </feedback>
        </condition>
        <condition string="^\s*.{5,}\s*$">
          <feedback>
            <p>That is too many digits</p>
          </feedback>
        </condition>
        <condition string="^\s*[^\d]+\s*$">
          <feedback>
            <p>Your answer should be a number</p>
          </feedback>
        </condition>
        <condition string="^\s*x\s*$">
          <feedback>
            <p>Hint: it has to be a power of 2</p>
          </feedback>
        </condition>
      </var>
    </setup>
  </exercise>


  <remark> Materials on this page adapted with permission from <url
      href="http://chortle.ccsu.edu/java5/index.html">Introduction to Computer Science using Java</url> by Bradley Kjell
    (<url
      href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</url>) </remark>
</section>

