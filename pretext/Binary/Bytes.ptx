<section xml:id="binary_bytes">
  <title>Bytes</title>
  <p>One bit of information is so little that usually computer memory is organized into groups of eight bits. Each
    eight-bit group is called a byte. Because it has 8 bits, it can store <m>2^8</m> or 256 different values. This makes
    it appropriate for storing things like a single character of text - with 256 different values we can assign a
    different 8-bit pattern to each letter, digit, punctuation mark, etc<ellipsis/></p>
  <p>When more than eight bits are required for some data, several bytes are used. For example, typically:</p>
  <p>
    <ul>
      <li>
        <p>An integer is represented with a group of 4 bytes (32 bits)</p>
      </li>
      <li>
        <p>A decimal number is represented with a group of 8 bytes (64 bits)</p>
      </li>
      <li>
        <p>A color is repented by a group of 3 bytes (24 bits)</p>
      </li>
    </ul>
  </p>
  <p>When we are talking about much larger chunks of information, like the information that makes up an entire image or
    music file, we describe it in terms of <term>Kibibytes</term>, <term>Mebibytes</term>, <term>Gibibytes</term> or
    even larger quantities. These are all names for different powers of 2:</p>
  <table>
    <tabular>


      <row header="yes">
        <cell> Name </cell>
        <cell> Number of Bytes </cell>
        <cell> Power of 2 </cell>
      </row>


      <row>
        <cell> Byte </cell>
        <cell> 1 </cell>
        <cell>
          <m>2^0</m>
        </cell>
      </row>
      <row>
        <cell> Kibibyes (KiB) </cell>
        <cell> 1024 </cell>
        <cell>
          <m>2^{10}</m>
        </cell>
      </row>
      <row>
        <cell> Mebibytes (MiB) </cell>
        <cell> 1,048,576 </cell>
        <cell>
          <m>2^{20}</m>
        </cell>
      </row>
      <row>
        <cell> Gibibytes (GiB) </cell>
        <cell> 1,073,741,824 </cell>
        <cell>
          <m>2^{30}</m>
        </cell>
      </row>
      <row>
        <cell> Tebibyte (TiB) </cell>
        <cell> 1,099,511,627,776 </cell>
        <cell>
          <m>2^{40}</m>
        </cell>
      </row>


    </tabular>
  </table>
  <subsection xml:id="binary_powers-of-2-vs-10">
    <title>Powers of 2 vs 10</title>
    <p>In the metric system, Kilo, Mega, Giga, etc<ellipsis/> refer to different powers of 10. So a <term>Kilobyte</term>,
      or <term>KB</term>, is <m>10^{3}</m> bytes. Using that system gives us the following units:</p>
    <table>
      <tabular>


        <row header="yes">
          <cell> Name </cell>
          <cell> Number of Bytes </cell>
          <cell> Power of 10 </cell>
        </row>


        <row>
          <cell> Byte </cell>
          <cell> 1 </cell>
          <cell>
            <m>10^{0}</m>
          </cell>
        </row>
        <row>
          <cell> Kilobytes (KB) </cell>
          <cell> 1000 </cell>
          <cell>
            <m>10^{3}</m>
          </cell>
        </row>
        <row>
          <cell> Megabytes (MB) </cell>
          <cell> 1,000,000 </cell>
          <cell>
            <m>10^{6}</m>
          </cell>
        </row>
        <row>
          <cell> Gigabytes (GB) </cell>
          <cell> 1,000,000,000 </cell>
          <cell>
            <m>10^{9}</m>
          </cell>
        </row>
        <row>
          <cell> Terabyte (TB) </cell>
          <cell> 1,000,000,000,000 </cell>
          <cell>
            <m>10^{12}</m>
          </cell>
        </row>


      </tabular>
    </table>
    <p>Unfortunately, this distinction between units like <term>KB</term> and <term>KiB</term> is a relatively recent
      one and is not used consistently. If someone specifies one of the <term>KiB</term>, <term>MiB</term>, etc<ellipsis/>
      values, you can be sure that they mean a power of 2. However, when someone specifies a value without the little <term>
      i</term>, like <term>KB</term> or <term>MB</term> they may be specifying a power of 2 or 10. <em><q>256
      MB</q></em> can either mean <m>256 \times 10^{6}</m> or <m>256 \times 2^{20}</m> bytes. The same source may
      even use the <term>MB</term>, <term>GB</term>, etc<ellipsis/> notation to mean both base 10 and base 2 when describing
      different measurements. For example, if you buy a computer advertised with <em><q>16 GB</q></em> of main
      memory (RAM) and a <em><q>500 GB</q></em> hard drive, the 16 GB means <m>16 \times 2^{30}</m> while the 500
      GB means <m>500 \times 10^{9}</m>!</p>
    <p>Fortunately, the values of the base 2 and base 10 systems are close enough that a value like <em><q>32
      GB</q></em> gives you a good idea of how big the value is even if you aren’t sure how to interpret the <term>
      GB</term>. But if you desire an exact value, you need to figure out whether you should be using <m>10^{9}</m> or <m>
      2^{30}</m> for each <term>GB</term>.</p>
    <note>
      <p>Traditionally, people describe processor speeds, network speeds, and hard drive space using the power of
        10’s system. They describe main memory (RAM) and the size of files and data using the power of 2’s
        system. This gets a bit confusing when you are calculating something like how long it will take to send a <em><q>200
        MB</q></em> file over a <em><q>100 MB/s</q></em> network connection - the two <term>MB</term>’s
        are different units!</p>
    </note>


    <exercise label="binary_bytes1">
      <statement>
        <p>How many bits are in 3 bytes? <var />
        </p>
      </statement>
      <setup>
        <var>
          <condition number="24">
            <feedback>
              <p>Correct!</p>
            </feedback>
          </condition>
          <condition string="^\s*[^\d]+\s*$">
            <feedback>
              <p>Your answer should be a number</p>
            </feedback>
          </condition>
          <condition string="^\s*.{1}\s*$">
            <feedback>
              <p>That is not enough digits</p>
            </feedback>
          </condition>
          <condition string="^\s*.{3,}\s*$">
            <feedback>
              <p>That is too many digits</p>
            </feedback>
          </condition>
          <condition string="^\s*x\s*$">
            <feedback>
              <p>Hint: each byte is 8 bits</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <exercise label="binary_bytes2">
      <statement>
        <p>How many bytes are in 4KiB? <var />
        </p>
      </statement>
      <setup>
        <var>
          <condition number="4096">
            <feedback>
              <p>Correct!</p>
            </feedback>
          </condition>
          <condition string="^\s*[^\d]+\s*$">
            <feedback>
              <p>Your answer should be a number</p>
            </feedback>
          </condition>
          <condition string="^\s*.{1,3}\s*$">
            <feedback>
              <p>That is not enough digits</p>
            </feedback>
          </condition>
          <condition string="^\s*.{5,}\s*$">
            <feedback>
              <p>That is too many digits</p>
            </feedback>
          </condition>
          <condition string="^\s*x\s*$">
            <feedback>
              <p>Hint: each KB is 1024 bytes</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
  </subsection>

  <remark> Materials on this page adapted with permission from <url
      href="http://chortle.ccsu.edu/java5/index.html">Introduction to Computer Science using Java</url> by Bradley Kjell
    (<url
      href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</url>) </remark>
</section>

