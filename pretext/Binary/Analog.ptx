<section xml:id="binary_analog-and-digital">
  <title>Analog and Digital</title>
  <p>The computers we are most familiar with are electrical devices. Normally, an electrical signal is an <term>analog</term>
    phenomenon - meaning it can change continuously change in value. The voltage flowing through a circuit can take on
    an infinite number of possible values. In the figure below, imagine the wave as representing the voltage on a wire
    over time - the voltage changes smoothly over time.</p>
  <image source="Binary/Images/analog_wave.gif" width="50%" alt="An analog signal" />
  <p>Now imagine we cared about the exact voltage at any point in time - that a value of 3.00000 volts means one thing
    and 3.00001 volts means something else. It would be very difficult to build a machine that could reliably produce
    exactly the right signal or measure that signal with perfect accuracy. Even the slightest bit of noise would make it
    impossible to tell whether we were looking at 3.00000 volts or 3.00001 volts.</p>


  <p>That is one of the reasons computers are built as <term>digital</term> devices. A digital
    signal is only allowed to take on a limited number of possible values. Often, the only two states allowed are
    <q>on</q> and <q>off</q>. A digital signal with only two states plotted over time thus looks like
    this:</p>
  <image source="Binary/Images/digital_wave.gif" width="50%" alt="A digital signal" />
  <p>We could have more than two possible states - we refer to <q>digits</q> in numbers as digits because they
    are only allowed to be 0, 1, 2, 3, 4, 5, 6, 7, 8, or 9. A single digit canâ€™t represent a value halfway between
    1 and 2. The English alphabet is a digital system with 26 possible values (A-Z).</p>

  <exercise label="binary_analog1">
    <statement>

      <p>If an <term>analog</term> signal picks up some noise (the values at each point in time change by a random
        amount), has information been lost?</p>

    </statement>
    <choices>

      <choice correct="yes">
        <statement>
          <p>Yes, the noise hides the exact values of the original signal.</p>
        </statement>
        <feedback>
          <p />
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>No, electronics can just ignore the noise.</p>
        </statement>
        <feedback>
          <p>There is no way the electronics can perfectly tell the noise of the signal from the desired value.</p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>No, information has been added to the signal.</p>
        </statement>
        <feedback>
          <p>Noise isn't information - we do not care about its value.</p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>Maybe, it depends on how loud the noise is.</p>
        </statement>
        <feedback>
          <p>Any noise will hide the original signal - if we care about having exactly 3.00000 volts we can't afford any
            noise.</p>
        </feedback>
      </choice>
    </choices>

  </exercise>

  <remark> Materials on this page adapted with permission from <url
      href="http://chortle.ccsu.edu/java5/index.html">Introduction to Computer Science using Java</url> by Bradley Kjell
    (<url
      href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</url>) </remark>

</section>

