<section xml:id="logic-circuits_applying-logic-rules">
        <title>Applying Logic Rules</title>
        <p>Computers generally work with bit patterns like 01011100 to represent information. That means that often we need to apply a rule like AND or OR to not just two-bits, but to two longer patterns of bits. To apply a rule like AND to two-bit patterns like 1010 and 1110, we simply apply the rule to each successive pair of bits in the two patterns as shown in the diagram below:</p>
        <raw format="html" xml:space="preserve">&lt;style&gt; .puzzleborder { margin: 0px auto 10px auto; border: 1px solid black; display: block; } &lt;/style&gt;
&lt;br class="clear" /&gt;</raw>
        <exercise xml:id=""><TabNode tabname="Start" tabnode_options="{'subchapter': 'ApplyingRules', 'chapter': 'LogicCircuits', 'basecourse': 'welcomecs', 'optional': '', 'optclass': '', 'tabname': 'Start'}">
                <image source="LogicCircuits/Images/ApplyingAND0.png" width="50%"/>
                <p>We are going to apply the AND rule to combine the bit pattern 1010 with the pattern 1110. To do so, we will apply the rule to each &#8220;column&#8221; of bits in the two patterns.</p>
            </TabNode><TabNode tabname="1" tabnode_options="{'subchapter': 'ApplyingRules', 'chapter': 'LogicCircuits', 'basecourse': 'welcomecs', 'optional': '', 'optclass': '', 'tabname': '1'}">
                <image source="LogicCircuits/Images/ApplyingAND1.png" width="50%"/>
                <p>The AND rule states that if both input bits are 1, the output is 1. The first bit of both patterns is 1, so we record a 1 for the first bit of our answer.</p>
            </TabNode><TabNode tabname="2" tabnode_options="{'subchapter': 'ApplyingRules', 'chapter': 'LogicCircuits', 'basecourse': 'welcomecs', 'optional': '', 'optclass': '', 'tabname': '2'}">
                <image source="LogicCircuits/Images/ApplyingAND2.png" width="50%"/>
                <p>Looking at the second bit of each pattern, we see a 0 in the first pattern and a 1 in the second. The AND rule says that the output is 0 unless both inputs are 1. So this means the second bit of our answer will be 0.</p>
            </TabNode><TabNode tabname="3" tabnode_options="{'subchapter': 'ApplyingRules', 'chapter': 'LogicCircuits', 'basecourse': 'welcomecs', 'optional': '', 'optclass': '', 'tabname': '3'}">
                <image source="LogicCircuits/Images/ApplyingAND3.png" width="50%"/>
                <p>A 1 in the third bit of both input patterns means the third bit of our answer is 1 as well.</p>
            </TabNode><TabNode tabname="4" tabnode_options="{'subchapter': 'ApplyingRules', 'chapter': 'LogicCircuits', 'basecourse': 'welcomecs', 'optional': '', 'optclass': '', 'tabname': '4'}">
                <image source="LogicCircuits/Images/ApplyingAND4.png" width="50%"/>
                <p>Finally, in the last position, two 0&#8217;s result in 0 according to the AND rule. Our final answer is 1010. In any digit where both patterns had a 1 our answer has a 1; otherwise, it has a 0.</p>
            </TabNode></exercise>
        <p>Here is the result of applying the OR rule to the same two patterns:</p>
        <table><tabular>
            
                
                
                
                
                
                
                    <row>
                        <cell>
                            Pattern 1
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            0
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            0
                        </cell>
                    </row>
                    <row>
                        <cell>
                            Pattern 2
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            0
                        </cell>
                    </row>
                    <row>
                        <cell>
                            OR
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            1
                        </cell>
                        <cell>
                            0
                        </cell>
                    </row>
                
            
        </tabular></table>
        <p><ul>
            <li>
                <p><term>First column</term>: OR says that the result is 1 if either (or both) of the inputs is 1. So the first digit of the answer is a 1.</p>
            </li>
            <li>
                <p><term>Second column</term>: Only the second pattern has a 1 in the second digit. But that is all the OR rule requires - one input to be 1. So the second answer digit is 1.</p>
            </li>
            <li>
                <p><term>Third column</term>: Once again, two 1&#8217;s as input result in a 1 for our answer in the third digit.</p>
            </li>
            <li>
                <p><term>Fourth column</term>: In the last digit, both patterns have 0&#8217;s. That is the only way that OR produces a 0. So our answer has a 0 in the fourth digit.</p>
            </li>
        </ul></p>
        

        <exercise label="logiccircuits_applyingrules1">
            <statement>
    <p>What is the result of applying <term>OR</term> to: <raw format="html" xml:space="preserve"><br/></raw>
0101 <raw format="html" xml:space="preserve"><br/></raw>
0011? <raw format="html" xml:space="preserve"><br/></raw> <var/>  </p></statement><setup><var><condition string="^\s*0111\s*$"><feedback><p>Correct!</p></feedback></condition><condition string="^\s*[^01]+\s*$"><feedback><p>Your answer should be just 1s and 0s</p></feedback></condition><condition string="^\s*.{1,3}\s*$"><feedback><p>Not enough digits</p></feedback></condition><condition string="^\s*.{5,}\s*$"><feedback><p>Too many digits</p></feedback></condition><condition string="^\s*x\s*$"><feedback><p>Hint: Make sure to treat each column separately using OR</p></feedback></condition></var></setup></exercise>
        <exercise label="logiccircuits_applyingrules2">
            <statement>
    <p>What is the result of applying <term>AND</term> to: <raw format="html" xml:space="preserve"><br/></raw>
1010 <raw format="html" xml:space="preserve"><br/></raw>
0111? <raw format="html" xml:space="preserve"><br/></raw> <var/>  </p></statement><setup><var><condition string="^\s*0010\s*$"><feedback><p>Correct!</p></feedback></condition><condition string="^\s*[^01]+\s*$"><feedback><p>Your answer should be just 1s and 0s</p></feedback></condition><condition string="^\s*.{1,3}\s*$"><feedback><p>Not enough digits</p></feedback></condition><condition string="^\s*.{5,}\s*$"><feedback><p>Too many digits</p></feedback></condition><condition string="^\s*x\s*$"><feedback><p>Hint: Make sure to treat each column separately using AND</p></feedback></condition></var></setup></exercise>    </section>

