<section xml:id="csp-decisions-intro_using-multiple-if-statements">
        <title>Using Multiple if statements</title>
        <p>You can use more than one <c>if</c> statement in your code.  Here&#8217;s an example of a calculation
            that uses two <c>if</c> statements.  Let&#8217;s compute the total cost of an item where the price
            is based on the weight of the item.  If the item weighs less than 1 pound then the price is
            1.45 a pound.  If the item weighs 1 pound or more the price is 1.15 a pound.</p>
        <p>The program below is an attempt to do that. But it is broken in a subtle way.
            For one value of <c>weight</c>, the <c>price</c> will not be set to any value, so the calculation
            of <c>total</c> will fail with an error that something
            <c>is not defined</c>.  Edit the code and change the first line so that <c>weight</c> has a different value.
            Run it again and see what changes.  Try it in the codelens as well to see how the different
            values for weight changes the lines of code that are executed. Can you figure out the value
            of <c>weight</c> that will result in an error?</p>

    <program xml:id="Price_If_Bugged" interactive="activecode" language="python">
        <input>
weight = 0.5
if weight &lt; 1:
    price = 1.45
if weight &gt; 1:
    price = 1.15
total = weight * price
print(weight)
print(price)
print(total)
        </input>
    </program>

        <exercise label="cspdecisionsintro_multiple1">
            <statement>
    <p>In the program above, what value for weight will result in an error complaining that price
is not defined? <var/>  </p></statement><setup><var><condition string="^\s*^1$|1\.[0]*$\s*$"><feedback><p>Correct!</p></feedback></condition><condition string="^\s*.*\s*$"><feedback><p>Which value is not tested currently?</p></feedback></condition></var></setup></exercise>        <p>So how can we fix the bug? One way would be to change the second if to use <c>&gt;=</c> so that there
            the program handles every situation correctly.</p>
        <p>Another way we could solve the problem would be to set a <c>price</c> as a <em>default</em>, to assume
            that the weight if 1 or more. Then, we use an <c>if</c> to change change it only if the weight
            turns out to be less than 1.</p>

    <program xml:id="cspdecisionsintro_multiple2" interactive="activecode" language="python">
        <input>
weight = 0.5
price = 1.45

if weight &gt;= 1:
    price = 1.15

total = weight * price
print(weight)
print(price)
print(total)
        </input>
    </program>

    <exercise label="cspdecisionsintro_multiple3">
        <statement>

        <p>Modify the top program to use <c>&gt;=</c> in its second if. Then try both programs for weights
            of less than 1, 1, and more than 1. Are there values for weight that make the two programs
            above print different results when the same weight is used in both programs?</p>

        </statement>
<choices>

            <choice correct="yes">
                <statement>
                    <p>No, they're always the same.</p>
                </statement>
                <feedback>
                    <p>The end result is the same.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Yes, they're different if the weight is exactly 1 pound.</p>
                </statement>
                <feedback>
                    <p>If the weight is exactly 1 pound the price will be 1.15 in both programs.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Yes, they're different if the weight is under 1 pound.</p>
                </statement>
                <feedback>
                    <p>If the weight is under 1 pound the price will be 1.45 in both programs.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>Yes, they're different if the weight is over 1 pound.</p>
                </statement>
                <feedback>
                    <p>If the weight is over 1 pound the price will be 1.15 in both programs.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
        <p><term>Check your understanding</term></p>
<exercise label="cspdecisionsintro_multiple4" numbered="yes" adaptive="yes" indentation="show" language="python"><statement>
        <p>The following program should calculate the total price, but the lines are mixed up. The
            price is based on the weight.  Items that weigh less than 2 pounds should cost 1.5. Items
            that weigh more than 2 pounds should cost 1.3. Drag the blocks from the left and place
            them in the correct order on the right.  Be sure to also indent correctly!</p>
</statement>
<blocks><block order="1">
<cline>weight = 0.5</cline>
<cline>numItems = 5</cline>
<cline>if weight &lt; 2:</cline>
</block><block order="4">
<cline>    price = 1.50</cline>
</block><block order="6">
<cline>if weight &gt;= 2:</cline>
</block><block order="3">
<cline>    price = 1.30</cline>
</block><block order="2">
<cline>total = weight * price</cline>
</block><block order="5">
<cline>print(weight)</cline>
<cline>print(price)</cline>
<cline>print(total)</cline>
</block></blocks></exercise>
    <exercise label="cspdecisionsintro_multiple5">
        <statement>

        <p>Which of the following is true about the code below?</p>
        <program language="python"><input>
if (x &gt; 2):
    x = x * 2
if (x &gt; 4):
    x = 0
print(x)
</input></program>

        </statement>
<choices>

            <choice>
                <statement>
                    <p>x will always equal 0 after this code executes for any value of x</p>
                </statement>
                <feedback>
                    <p>If x was set to 1 originally, then it would still equal 1.</p>
                </feedback>
            </choice>

            <choice>
                <statement>
                    <p>if x is greater than 2, the value in x will be doubled after this code executes</p>
                </statement>
                <feedback>
                    <p>What happens in the original when x is greater than 2?</p>
                </feedback>
            </choice>

            <choice correct="yes">
                <statement>
                    <p>if x is greater than 2, x will equal 0 after this code executes</p>
                </statement>
                <feedback>
                    <p>If x is greater than 2, it will be set to 0.</p>
                </feedback>
            </choice>
</choices>

    </exercise>
    </section>

